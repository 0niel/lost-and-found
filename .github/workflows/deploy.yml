name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  JOB_STARTED_AT: ${{ github.event.created_at }}
  CR_REGISTRY: ${{ secrets.CR_REGISTRY }}
  CR_IMAGE_FRONTEND: ${{ secrets.CR_IMAGE_FRONTEND }}
  CI_ENV_PROD: ${{ secrets.CI_ENV_PROD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Registry
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Create local env
        run: |
          echo ${{ env.CI_ENV_PROD }} | base64 --decode >> $GITHUB_ENV
      - name: Build and Push Image
        run: |
          docker build \
          --pull \
          --build-arg DATABASE_URL=${{ env.DATABASE_URL }} \
          --build-arg ANALYZE=${{ env.ANALYZE }} \
          --build-arg DISABLE_PWA=${{ env.DISABLE_PWA }} \
          --build-arg S3_UPLOAD_KEY=${{ env.S3_UPLOAD_KEY }} \
          --build-arg S3_UPLOAD_SECRET=${{ env.S3_UPLOAD_SECRET }} \
          --build-arg S3_UPLOAD_BUCKET=${{ env.S3_UPLOAD_BUCKET }} \
          --build-arg S3_UPLOAD_HOSTNAME=${{ env.S3_UPLOAD_HOSTNAME }} \
          --build-arg S3_UPLOAD_ENDPOINT_URL=${{ env.S3_UPLOAD_ENDPOINT_URL }} \
          --build-arg S3_UPLOAD_REGION=${{ env.S3_UPLOAD_REGION }} \
          --build-arg OPENAI_API_KEY=${{ env.OPENAI_API_KEY }} \
          --build-arg NEXT_PUBLIC_S3_UPLOAD_RESOURCE_FORMATS=${{ env.NEXT_PUBLIC_S3_UPLOAD_RESOURCE_FORMATS }} \
          --build-arg NEXTAUTH_SECRET=${{ env.NEXTAUTH_SECRET }} \
          --build-arg NEXTAUTH_URL=${{ env.NEXTAUTH_URL }} \
          --build-arg MIREA_CLIENT_ID=${{ env.MIREA_CLIENT_ID }} \
          --build-arg MIREA_CLIENT_SECRET=${{ env.MIREA_CLIENT_SECRET }} \
          --build-arg GOOGLE_CLIENT_ID=${{ env.GOOGLE_CLIENT_ID }} \
          --build-arg GOOGLE_CLIENT_SECRET=${{ env.GOOGLE_CLIENT_SECRET }} \
          --build-arg GITHUB_CLIENT_ID=${{ env.GITHUB_CLIENT_ID }} \
          --build-arg GITHUB_CLIENT_SECRET=${{ env.GITHUB_CLIENT_SECRET }} \
          --cache-from cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND }}:latest \
          --label "org.image.title=${{ github.repository }}" \
          --label "org.image.url=${{ github.repositoryUrl }}" \
          --label "org.image.created=${{ env.JOB_STARTED_AT }}" \
          --label "org.image.revision=${{ github.ref_name }}" \
          --label "org.image.version=${{ github.sha }}" \
          --tag cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND }}:${{ github.sha }} \
          .
          docker push cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND }}:${{ github.sha }}
          docker tag cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND }}:${{ github.sha }} \
            cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND }}:latest
          docker push cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND }}:latest
  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy
        run: |
          cd ${{ secrets.PRODUCTION_FOLDER }}
          docker compose --env-file .env.local pull
          docker compose --env-file .env.local up -d
